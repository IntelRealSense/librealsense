<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>netstandard2.0;net35;net461</TargetFrameworks>
    <AssemblyName>Intel.RealSense</AssemblyName>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <Authors>Intel</Authors>
    <Company>Intel</Company>
    <PackageId>Intel.RealSense</PackageId>
    <Copyright>Copyright Â©  2017 Intel Corporation</Copyright>
    <Description>.NET Wrapper for Intel RealSense SDK 2.0</Description>
    <PackageProjectUrl>https://github.com/IntelRealSense/librealsense</PackageProjectUrl>
    <PackageIconUrl>https://github.com/IntelRealSense/librealsense/blob/master/doc/img/realsense.png</PackageIconUrl>
    <RepositoryUrl>https://github.com/IntelRealSense/librealsense</RepositoryUrl>
    <PackageTags>3d;vision;robotics;depth;realsense;perception</PackageTags>
    <PackageLicenseUrl>https://github.com/IntelRealSense/librealsense/blob/master/LICENSE</PackageLicenseUrl>
    <Configurations>Debug;Release</Configurations>
    <Platforms>AnyCPU;x86;x64</Platforms>
  </PropertyGroup>

  <ItemGroup>
    <None Include=".nuget\Intel.RealSense.targets" />
    <Compile Remove="Properties/**" />
  </ItemGroup>

  <PropertyGroup>
    <BuildPlatform>$(Platform)</BuildPlatform>
    <BuildPlatform Condition="'$(Platform)'=='AnyCPU'">x86</BuildPlatform>
    <BuildPlatform Condition="'$(Platform)'=='AnyCPU' and '$(PROCESSOR_ARCHITEW6432)'=='AMD64'">x64</BuildPlatform>
    <InstallPath>C:\Program Files (x86)\Intel RealSense SDK 2.0\bin</InstallPath>
    <BuildPathx86></BuildPathx86>
    <BuildPathx64></BuildPathx64>
    <BuildPath Condition="'$(BuildPath)'==''">..\..\..\build\$(Configuration)\realsense2.dll</BuildPath>
  </PropertyGroup>

  <Target Name="IncludeLib" DependsOnTargets="IncludeDependencies" BeforeTargets="Build" Condition="'$(IsCrossTargetingBuild)' == 'true'">
    <Copy Condition="'$(LibPathx86)'!=''" SourceFiles="$(LibPathx86)" DestinationFolder="$(OutputPath)\runtimes\win-x86\native" />
    <Copy Condition="'$(LibPathx64)'!=''" SourceFiles="$(LibPathx64)" DestinationFolder="$(OutputPath)\runtimes\win-x64\native" />
    <ItemGroup>
      <Frameworks Include="$(TargetFrameworks)" />
    </ItemGroup>
    <PropertyGroup>
      <LibFile Condition="'$(BuildPlatform)'=='x86'">$(LibPathx86)</LibFile>
      <LibFile Condition="'$(BuildPlatform)'=='x64'">$(LibPathx64)</LibFile>
    </PropertyGroup>
    <Copy Condition="'$(LibFile)'!=''" SourceFiles="$(LibFile)" DestinationFolder="$(OutputPath)\%(Frameworks.Identity)" />
    <Message Condition="'$(LibFile)'!=''" Text="realsense2.dll in output folder from $(LibFile)" Importance="high" />
  </Target>

  <Target Name="IncludeDependencies" DependsOnTargets="EnsureBitCorrectness">
    <ItemGroup>
      <None Include="$(OutputPath)\runtimes\**" PackagePath="runtimes" Pack="true" />
      <None Include=".nuget\*.targets" PackagePath="build" Pack="true" />
    </ItemGroup>
  </Target>

  <Target Name="EnsureBitCorrectness">
    <CallTarget Targets="BuildLib" ContinueOnError="true" />
    <Exec Condition="'$(BuildPathx86)'=='' and '$(BuildPathx64)'=='' and Exists($(BuildPath))" ConsoleToMSBuild="true" StandardOutputImportance="low" Command="call &quot;$(DevEnvDir)..\Tools\VsDevCmd.bat&quot; &amp;&amp; dumpbin.exe /headers $([System.IO.Path]::GetFullPath($(BuildPath)))">
      <Output TaskParameter="ConsoleOutput" PropertyName="OutputOfExec" />
    </Exec>
    <PropertyGroup>
      <LibArch Condition="$(OutputOfExec.Contains('machine (x86)'))">x86</LibArch>
      <LibArch Condition="$(OutputOfExec.Contains('machine (x64)'))">x64</LibArch>
      <BuildPathx86 Condition="'$(BuildPathx86)'=='' and '$(LibArch)'=='x86'">$(BuildPath)</BuildPathx86>
      <BuildPathx64 Condition="'$(BuildPathx64)'=='' and '$(LibArch)'=='x64'">$(BuildPath)</BuildPathx64>
      <LibPathx86 Condition="Exists('$(InstallPath)')">$(InstallPath)\x86\realsense2.dll</LibPathx86>
      <LibPathx64 Condition="Exists('$(InstallPath)')">$(InstallPath)\x64\realsense2.dll</LibPathx64>
      <LibPathx86 Condition="Exists('$(BuildPathx86)')">$(BuildPathx86)</LibPathx86>
      <LibPathx64 Condition="Exists('$(BuildPathx64)')">$(BuildPathx64)</LibPathx64>
    </PropertyGroup>
    <Error Condition="'$(LibPathx86)'=='' and '$(LibPathx64)'==''" Text="realsense2.dll NOT FOUND! Please build it from source using CMake or install Intel RealSense SDK 2.0 from GitHub releases." />
    <CreateProperty Value="$(LibPathx86)">
      <Output TaskParameter="Value" PropertyName="LibPathx86" />
    </CreateProperty>
    <CreateProperty Value="$(LibPathx64)">
      <Output TaskParameter="Value" PropertyName="LibPathx64" />
    </CreateProperty>
    <Message Condition="('$(BuildPlatform)'=='x64' and '$(BuildPathx64)'=='' and '$(LibPathx64)'!='') or ('$(BuildPlatform)'=='x86' and '$(BuildPathx86)'=='' and '$(LibPathx86)'!='')" Text="No compatible local build of realsense.dll was found. Using the installed version" Importance="high" />
    <Error Condition="('$(BuildPlatform)'=='x64' and '$(LibPathx64)'=='') or ('$(BuildPlatform)'=='x86' and '$(LibPathx86)'=='')" Text="Current platform is $(Platform) which will run as $(BuildPlatform) on this computer. realsense2.dll found is $(LibArch). Either force the build to be $(LibArch) or manually specify the BuildPath$(BuildPlatform) property." />
  </Target>

  <Target Name="BuildLib">
    <PropertyGroup>
      <CMakeInstalled>-1</CMakeInstalled>
      <BuildDirectory>..\..\..\build</BuildDirectory>
    </PropertyGroup>
    <Exec Command="CMake --version">
      <Output TaskParameter="ExitCode" PropertyName="CMakeInstalled" />
    </Exec>
    <Error Condition="$(CMakeInstalled)!=0" Text="CMake not found therefore librealsense could not be built from source" />
    <Exec Command="if not exist $(BuildDirectory) mkdir $(BuildDirectory)" />
    <Exec Condition="!Exists('$(BuildDirectory)\CMakeCache.txt')" Command="cd $(BuildDirectory) &amp;&amp; cmake -D BUILD_GRAPHICAL_EXAMPLES=OFF -D BUILD_EXAMPLES=OFF .." />
    <Exec Command="cd $(BuildDirectory) &amp;&amp; cmake --build ./ --config $(Configuration)" />
  </Target>

</Project>
